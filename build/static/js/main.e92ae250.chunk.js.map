{"version":3,"sources":["images/down-arrow.svg","images/wave.svg","components/SourceCode.js","components/Question.js","components/Collapsable.js","constants/questions.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SourceCode","url","Question","state","collapse","this","setState","code","collapsable_id","props","question","id","collapsable_link","className","data-toggle","href","role","aria-expanded","aria-controls","onClick","renderCode","bind","question_number","question_title","Component","collapsable","topic","topicTitle","title","questions","map","TOPIC_VICE_QUESTIONS","Navbar","class","Footer","src","wave","alt","App","topicList","DownArrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,mRCG5B,SAASC,EAAT,GAA4B,IAAPC,EAAM,EAANA,IAChC,OACI,6BACI,kBAAC,IAAD,CAAMA,IAAKA,K,ICHFC,E,kDACjB,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,E,yDAQV,OAAGC,KAAKF,MAAMC,SACHC,KAAKC,SAAS,CACbF,UAAU,IAGfC,KAAKC,SAAS,CACjBF,UAAU,M,+BAId,IAGIG,EAHEC,EAAc,mBAAeH,KAAKI,MAAMC,SAASC,IACjDC,EAAgB,WAAOJ,GAS7B,OALID,EADDF,KAAKF,MAAMC,SACH,8BAGA,kBAACJ,EAAD,CAAYC,IAAKI,KAAKI,MAAMC,SAAST,MAG5C,yBAAKY,UAAU,uBACX,uBAAGC,cAAY,WAAWC,KAAMH,EAAkBI,KAAK,SAASC,gBAAc,QAAQC,gBAAeV,EAAgBW,QAASd,KAAKe,WAAWC,KAAKhB,OAC/I,0BAAMQ,UAAU,QAAQR,KAAKI,MAAMC,SAASY,iBAC5C,8BAAOjB,KAAKI,MAAMC,SAASa,iBAE/B,yBAAKV,UAAU,WAAWF,GAAIH,GACzBD,Q,GApCiBiB,aCCvB,SAASC,EAAT,GAA+B,IAATC,EAAQ,EAARA,MAC3BC,EAAaD,EAAME,MACnBC,EAAYH,EAAMG,UAAUC,KAAI,SAAApB,GAAQ,OAAI,kBAAC,EAAD,CAAUA,SAAUA,OAEtE,OACI,6BACI,wBAAIG,UAAU,QAASc,GACrBE,GCXP,IAAME,EAAuB,CAChC,CACI,MAAS,gBACT,UAAa,CACT,CACI,GAAM,EACN,gBAAmB,EACnB,eAAkB,8GAClB,IAAO,0EAEX,CACI,GAAM,EACN,gBAAmB,EACnB,eAAkB,wDAClB,IAAO,4EAGjB,CACE,MAAS,YACT,UAAa,CACT,CACI,GAAM,EACN,gBAAmB,EACnB,eAAkB,wDAClB,IAAO,6E,sBCrBR,SAASC,IACpB,OACI,yBAAKnB,UAAU,eACX,wBAAIA,UAAU,qCACV,wBAAIoB,MAAM,YACN,uBAAGpB,UAAU,WAAWE,KAAK,KAA7B,aAEJ,wBAAIF,UAAU,YACV,uBAAGA,UAAU,WAAWE,KAAK,kBAA7B,SAEJ,wBAAIF,UAAU,mBACV,uBAAGA,UAAU,WAAWE,KAAK,iBAA7B,gB,0BCVL,SAASmB,IACpB,OACI,6BACG,yBAAKC,IAAKC,IAAMC,IAAI,YC+BhBC,MA9Bf,WAEE,IAAMC,EAAYR,EAAqBD,KAAI,SAAAJ,GAAK,OAAI,kBAAC,EAAD,CAAaA,MAAOA,OAExE,OACE,6BAGE,yBAAKb,UAAU,aACb,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAChB,uDACA,qFACA,yBAAKA,UAAU,eACb,uBAAGE,KAAK,kBACN,yBAAKoB,IAAKK,IAAWH,IAAI,aAAaxB,UAAU,wBAItD,6BAASF,GAAG,iBACR4B,IAGN,6BAAS5B,GAAG,gBACV,kBAACuB,EAAD,SCpBYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e92ae250.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow.30028bfd.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave.3ca59fd6.svg\";","import React from 'react'\nimport Gist from 'super-react-gist'\n\nexport default function SourceCode({url}) {\n    return (\n        <div>\n            <Gist url={url} />\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport SourceCode from './SourceCode'\n\nexport default class Question extends Component {\n    constructor() {\n        super()\n        this.state = {\n            collapse: true\n        }\n    }\n\n    renderCode() {\n        if(this.state.collapse) {\n            return this.setState({\n                    collapse: false\n                })\n        }\n        return this.setState({\n            collapse: true\n        })\n    }\n    render() {\n        const collapsable_id = `question-${this.props.question.id}`;\n        const collapsable_link = `#${collapsable_id}`;\n\n        let code;\n        if(this.state.collapse){\n            code = <div></div>\n        }\n        else {\n            code = <SourceCode url={this.props.question.url}/>\n        }\n        return (\n            <div className=\"collapsable p-4 m-2\">\n                <p data-toggle=\"collapse\" href={collapsable_link} role=\"button\" aria-expanded=\"false\" aria-controls={collapsable_id} onClick={this.renderCode.bind(this)}>\n                    <span className=\"mr-4\">{this.props.question.question_number}</span>\n                    <span>{this.props.question.question_title}</span>\n                </p>\n                <div className=\"collapse\" id={collapsable_id}>\n                    {code}\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport '../styles/collapsable.scss'\nimport Question from './Question'\n\nexport default function collapsable({topic}) {\n    const topicTitle = topic.title;\n    const questions = topic.questions.map(question => <Question question={question} />)\n\n    return (\n        <div>\n            <h2 className=\"mt-5\">{ topicTitle }</h2>\n            { questions }\n        </div>\n    )\n}\n","export const TOPIC_VICE_QUESTIONS = [\n    {\n        'title' :'Miscellaneous', \n        'questions': [\n            {\n                'id': 1,\n                'question_number': 1,\n                'question_title': 'How to Convert String to Integer in Pandas DataFrame? How to Convert String to Integer in Pandas DataFrame?',\n                'url': 'https://gist.github.com/raghavbud1597/42907e1a7d2cd5570dc053a1023a404f'\n            },\n            {\n                'id': 2,\n                'question_number': 2,\n                'question_title': 'How to Convert String to Integer in Pandas DataFrame?',\n                'url': 'https://gist.github.com/raghavbud1597/42907e1a7d2cd5570dc053a1023a404f'\n            }\n        ]\n    },{\n        'title': 'Recursion',\n        'questions': [\n            {\n                'id': 3,\n                'question_number': 1,\n                'question_title': 'How to Convert String to Integer in Pandas DataFrame?',\n                'url': 'https://gist.github.com/raghavbud1597/42907e1a7d2cd5570dc053a1023a404f'\n            }\n        ]\n    }\n];","import React from 'react'\nimport '../styles/Navbar.scss'\n\nexport default function Navbar() {\n    return (\n        <div className=\"page-navbar\">\n            <ul className=\"nav nav-pills justify-content-end\">\n                <li class=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">About Me</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#question-list\">List</a>\n                </li>\n                <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#subscription\">Subscribe</a>\n                </li>\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\nimport wave from './../images/wave.svg'\nimport '../styles/footer.scss'\n\nexport default function Footer() {\n    return (\n        <div>\n           <img src={wave} alt=\"footer\"/> \n        </div>\n    )\n}\n","import React from 'react';\nimport './styles/App.scss';\nimport Collapsable from './components/Collapsable';\nimport { TOPIC_VICE_QUESTIONS } from './constants/questions'\nimport DownArrow from './images/down-arrow.svg'\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  const topicList = TOPIC_VICE_QUESTIONS.map(topic => <Collapsable topic={topic} />)\n\n  return (\n    <div>\n\n    \n      <div className=\"container\">\n        <Navbar />\n        <header className=\"App-header\">\n          <h1>Hi I'm Raghav Budhiraja</h1>\n          <p>I have created this page to share my Coding Solutions.</p>\n          <div className=\"scroll-down\">\n            <a href=\"#question-list\">\n              <img src={DownArrow} alt=\"down-arrow\" className=\"scroll-down-icon\" />\n            </a>\n          </div>\n        </header>\n        <section id=\"question-list\">\n          { topicList }\n        </section>\n      </div>\n      <section id=\"subscription\">\n        <Footer />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport'bootstrap/dist/css/bootstrap.min.css';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}