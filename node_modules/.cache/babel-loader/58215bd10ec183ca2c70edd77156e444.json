{"ast":null,"code":"var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // --- SUPER REACT GIST ---\n// Simple and flexible component that allows you to embed GitHub Gists in React projects.\n// -- IMPORTS --\n// - GLOBAL -\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // -- MAIN --\n// Extending PureComponent allow us to prevent re-rendering when the props DONT change.\n\nvar Gist = (_temp = _class = function (_React$PureComponent) {\n  _inherits(Gist, _React$PureComponent);\n\n  function Gist(props) {\n    _classCallCheck(this, Gist);\n\n    var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this, props));\n\n    _this.url = props.url;\n    _this.file = props.file;\n    _this.stylesheetAdded = false; // Ensures we only add the Gist's stylesheet one time.\n\n    _this.state = {\n      loading: true,\n      // We have not fetched the Gist yet.\n      gistContent: '' // Raw HTML of the Gist.\n\n    };\n    return _this;\n  } // Each time we request a new Gist, we have to provide a new\n  // global function name to serve as the JSONP callback.\n  // Unique identifier of each JSONP callback.\n\n\n  Gist.__nextGist = function __nextGist() {\n    return \"embed_gist_callback_\" + Gist.__gistCallbackId++;\n  }; // The Gist JSON data includes a stylesheet file.\n  // We ensure to add that file only one time in our page.\n\n\n  Gist.__addStylesheet = function __addStylesheet(href) {\n    if (!this.stylesheetAdded) {\n      var link = document.createElement('link');\n      link.type = \"text/css\";\n      link.rel = \"stylesheet\";\n      link.href = href;\n      document.head.appendChild(link);\n      this.stylesheetAdded = true;\n    }\n  };\n\n  Gist.prototype.componentDidMount = function componentDidMount() {\n    // Request the Gist iframe.\n    this._buildGist();\n  };\n\n  Gist.prototype._getID = function _getID() {\n    // Extract a string in form `username/uniqueValue`\n    // from the provided Gist url.\n    return this.url.match(/(\\.com\\/)(.*?)([^#]+)/).pop();\n  };\n\n  Gist.prototype._getFile = function _getFile() {\n    // If `file` prop was provided return that.\n    if (this.file != null) {\n      return '&file=' + this.file;\n    } // Else construct the file parameter from the `url` prop.\n\n\n    var file = this.url.split('#').pop(); // If the file parameter exist in Gist url return that file.\n\n    if (file.match(/file*/) != null) {\n      return '&file=' + file.replace('file-', '').replace('-', '.');\n    } // Else the user wants to link the whole Gist repository.\n\n\n    return '';\n  };\n\n  Gist.prototype._tranformedURL = function _tranformedURL(gistCallback) {\n    // Construct a gist url that will allow us to redner the Gist into our page.\n    var id = this._getID();\n\n    var file = this._getFile();\n\n    return 'https://gist.github.com/' + id + '.json?callback=' + gistCallback + file;\n  };\n\n  Gist.prototype._buildGist = function _buildGist() {\n    var _this2 = this;\n\n    var gistCallback = Gist.__nextGist();\n\n    window[gistCallback] = function (gist) {\n      Gist.__addStylesheet(gist.stylesheet);\n\n      _this2.setState({\n        loading: false,\n        gistContent: gist.div\n      });\n    };\n\n    var gistScript = document.createElement('script');\n    gistScript.type = 'text/javascript';\n    gistScript.src = this._tranformedURL(gistCallback);\n    document.head.appendChild(gistScript);\n  };\n\n  Gist.prototype.render = function render() {\n    if (this.state.loading) {\n      return React.createElement('div', null, '...waiting for Gist...');\n    } else {\n      // Render as html.\n      // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n      return React.createElement('div', {\n        dangerouslySetInnerHTML: {\n          __html: this.state.gistContent\n        }\n      });\n    }\n  };\n\n  return Gist;\n}(React.PureComponent), _class.__gistCallbackId = 0, _temp); // - PROP TYPES -\n\nGist.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  url: PropTypes.string.isRequired,\n  file: PropTypes.string // -- EXPORTS --\n\n} : {};\nexport default Gist;","map":{"version":3,"sources":["/Users/rbudhiraja/Desktop/personal/projects/coding-den/node_modules/super-react-gist/es/index.js"],"names":["_class","_temp","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PropTypes","Gist","_React$PureComponent","props","_this","url","file","stylesheetAdded","state","loading","gistContent","__nextGist","__gistCallbackId","__addStylesheet","href","link","document","createElement","type","rel","head","appendChild","componentDidMount","_buildGist","_getID","match","pop","_getFile","split","replace","_tranformedURL","gistCallback","id","_this2","window","gist","stylesheet","setState","div","gistScript","src","render","dangerouslySetInnerHTML","__html","PureComponent","propTypes","process","env","NODE_ENV","string","isRequired"],"mappings":"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","sourcesContent":["var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// --- SUPER REACT GIST ---\n// Simple and flexible component that allows you to embed GitHub Gists in React projects.\n\n// -- IMPORTS --\n// - GLOBAL -\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// -- MAIN --\n// Extending PureComponent allow us to prevent re-rendering when the props DONT change.\nvar Gist = (_temp = _class = function (_React$PureComponent) {\n  _inherits(Gist, _React$PureComponent);\n\n  function Gist(props) {\n    _classCallCheck(this, Gist);\n\n    var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this, props));\n\n    _this.url = props.url;\n    _this.file = props.file;\n    _this.stylesheetAdded = false; // Ensures we only add the Gist's stylesheet one time.\n    _this.state = {\n      loading: true, // We have not fetched the Gist yet.\n      gistContent: '' // Raw HTML of the Gist.\n    };\n    return _this;\n  }\n\n  // Each time we request a new Gist, we have to provide a new\n  // global function name to serve as the JSONP callback.\n\n\n  // Unique identifier of each JSONP callback.\n  Gist.__nextGist = function __nextGist() {\n    return \"embed_gist_callback_\" + Gist.__gistCallbackId++;\n  };\n\n  // The Gist JSON data includes a stylesheet file.\n  // We ensure to add that file only one time in our page.\n\n\n  Gist.__addStylesheet = function __addStylesheet(href) {\n    if (!this.stylesheetAdded) {\n      var link = document.createElement('link');\n      link.type = \"text/css\";\n      link.rel = \"stylesheet\";\n      link.href = href;\n      document.head.appendChild(link);\n      this.stylesheetAdded = true;\n    }\n  };\n\n  Gist.prototype.componentDidMount = function componentDidMount() {\n    // Request the Gist iframe.\n    this._buildGist();\n  };\n\n  Gist.prototype._getID = function _getID() {\n    // Extract a string in form `username/uniqueValue`\n    // from the provided Gist url.\n    return this.url.match(/(\\.com\\/)(.*?)([^#]+)/).pop();\n  };\n\n  Gist.prototype._getFile = function _getFile() {\n    // If `file` prop was provided return that.\n    if (this.file != null) {\n      return '&file=' + this.file;\n    }\n\n    // Else construct the file parameter from the `url` prop.\n    var file = this.url.split('#').pop();\n\n    // If the file parameter exist in Gist url return that file.\n    if (file.match(/file*/) != null) {\n      return '&file=' + file.replace('file-', '').replace('-', '.');\n    }\n\n    // Else the user wants to link the whole Gist repository.\n    return '';\n  };\n\n  Gist.prototype._tranformedURL = function _tranformedURL(gistCallback) {\n    // Construct a gist url that will allow us to redner the Gist into our page.\n    var id = this._getID();\n    var file = this._getFile();\n    return 'https://gist.github.com/' + id + '.json?callback=' + gistCallback + file;\n  };\n\n  Gist.prototype._buildGist = function _buildGist() {\n    var _this2 = this;\n\n    var gistCallback = Gist.__nextGist();\n    window[gistCallback] = function (gist) {\n      Gist.__addStylesheet(gist.stylesheet);\n      _this2.setState({\n        loading: false,\n        gistContent: gist.div\n      });\n    };\n\n    var gistScript = document.createElement('script');\n    gistScript.type = 'text/javascript';\n    gistScript.src = this._tranformedURL(gistCallback);\n    document.head.appendChild(gistScript);\n  };\n\n  Gist.prototype.render = function render() {\n    if (this.state.loading) {\n      return React.createElement(\n        'div',\n        null,\n        '...waiting for Gist...'\n      );\n    } else {\n      // Render as html.\n      // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n      return React.createElement('div', { dangerouslySetInnerHTML: { __html: this.state.gistContent } });\n    }\n  };\n\n  return Gist;\n}(React.PureComponent), _class.__gistCallbackId = 0, _temp);\n\n// - PROP TYPES -\n\nGist.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  url: PropTypes.string.isRequired,\n  file: PropTypes.string\n\n  // -- EXPORTS --\n} : {};export default Gist;"]},"metadata":{},"sourceType":"module"}